  1 #coding : utf8
  2 from numpy import *
  3 import operator
  4 
  5 def createDataSet() :
  6     group = array ([[1.0,1.1],[1.0,1.0],[0,0],[0.1,0.1]])
  7     labels = ['A','A','B','B']
  8     return group, labels
  9 
 10 def classify0(inX, dataSet, labels, k):
 11     dataSetSize = dataSet.shape[0]            #number of testset
 12     diffMat = tile(inX, (dataSetSize,1)) - dataSet  #compute difference
 13     sqDiffMat = diffMat **2           #square difference
 14     sqDistances = sqDiffMat.sum(axis = 1)
 15     distances = sqDistances ** 0.5
 16     sortedDistIndices = distances.argsort()
 17     classCount = {}
 18     for i in range (k):
 19         voteIlabel = labels[sortDistIndices[i]]
 20         classCount[voteIlabel] = classCount.get(voteIlabel,0) + 1
 21     sortedClassCount = sorted(classCount.iteritems(),
 22     key = operator.itemgetter(1), reverse = True)
 23     return sortedClassCount[0][0]
